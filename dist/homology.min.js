/*! Homology.js, version 0.2.0.  Developed by Eric Weitz.  https://github.com/eweitz/homology.  Public domain (CC0 1.0). */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var o=t();for(var r in o)("object"==typeof exports?exports:e)[r]=o[r]}}(window,function(){return function(e){var t={};function o(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,o),n.l=!0,n.exports}return o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)o.d(r,n,function(t){return e[t]}.bind(null,n));return r},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="/dist",o(o.s=1)}([function(e,t,o){"use strict";function r(e){var t;return(t=e.split(" "))[0][0].toUpperCase()+t[0].slice(1)+" "+t.slice(1).join(" ")}Object.defineProperty(t,"__esModule",{value:!0}),t.reportError=function(e,t=null,o=null,n=null,a=null){var i,u;throw null!==n&&(n=r(n)),null!==a&&(a=r(a[0])),i={geneNotFound:`Gene "${o}" not found in "${n}"`,orthologsNotFound:`Orthologs not found for gene "${o}"`,orthologsNotFoundInTarget:`Orthologs not found for gene "${o}" in target organism "${a}"`},u=t?`<br/><small>${t.message}</small>`:"",new Error(i[e]+u)}},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,n=o(2),a=(r=n)&&r.__esModule?r:{default:r};window.fetchOrthologs=a.default,t.default=a.default},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=a(o(3)),n=a(o(4));function a(e){return e&&e.__esModule?e:{default:e}}t.default=async function(e,t,o,a="oma"){return"oma"===a?await(0,r.default)(e,t,o):"orthodb"===a?await(0,n.default)(e,t,o):void 0}},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=o(0),n="https://omabrowser.org/api";t.default=async function(e,t,o){var a,i,u,s,l,c,f,d;try{a=await async function(e,t){var o,r,n,a,i,u,s,l;for(o="https://www.uniprot.org/uniprot/?format=tab&"+(i="columns=id,entry name,genes")+"&sort=score",r="&query=gene:"+e+"+AND+organism:"+t,n=await fetch(o+r),a=(await n.text()).split("\n").slice(1,-1),u=0;u<a.length;u++)if(s=(i=a[u].split("\t"))[2].split(" ").map(e=>e.toLowerCase()),l=i[0],s.includes(e.toLowerCase()))return l;throw Error('No Uniprot entry found for gene name "'+e+'" in organism "'+t+'"')}(e,t),i=await async function(e){var t,o,r;if(t=n+"/protein/"+e+"/",o=await fetch(t),r=await o.json(),404===o.status)throw Error('OMA protein not found for Uniprot protein "'+e+'".');return r}(a)}catch(f){(0,r.reportError)("geneNotFound",f,e,t,[o])}try{u=await async function(e){var t,o,r;if(t=n+"/protein/"+e+"/orthologs/",o=await fetch(t),r=await o.json(),404===o.status)throw Error('OMA orthologs not found for Uniprot protein "'+e+'".');return r}(a)}catch(f){(0,r.reportError)("orthologsNotFound",f,e,t,o)}return d=o.map(e=>(function(e){var t,o;return"homo sapiens"===e?"HUMAN":"mus musculus"===e?"MOUSE":([t,o]=e.split(" "),(t.slice(0,3)+o.slice(0,2)).toUpperCase())})(e)),0===(c=u.filter(e=>(s=e.omaid,l=s.slice(0,5),d.includes(l)))).length&&(0,r.reportError)("orthologsNotFoundInTarget",void 0,e,t,o),c.unshift(i),c=c.map(e=>e.chromosome+":"+e.locus.start+"-"+e.locus.end)}},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=o(0),n="https://homology-api.firebaseapp.com/orthodb",a="https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=gene&version=2.0&retmode=json&api_key=e7ce8adecd69d0457df7ec2ccbb704c4e709";async function i(e){var t=await fetch(n+e);return(await t.json()).data}async function u(e){var t=e.gene_id.param,o=(await i("/ogdetails?id="+t)).entrez[0].id;return await async function(e){var t,o,r;return t=await fetch(a+"&id="+e),(r=(o=(await t.json()).result)[o.uids[0]].genomicinfo[0]).chrloc+":"+r.chrstart+"-"+r.chrstop}(o)}async function s(e,t,o,r){var n,a=[],u=!1;return(await i(`/orthologs?id=${e}&species=all`)).forEach(e=>{var i=e.organism.name.toLowerCase();o===i&&(n=e,e.genes.forEach(e=>{var o=e.gene_id.id.toLowerCase();t.toLowerCase()===o&&(u=!0)})),r.includes(i)&&a.push(e)}),[n,a,u]}t.default=async function(e,t,o){var n,a,l,c,f=!1,d=[];for(n=await i("/search?query="+e+"&&level=2759&species=9606"),a=0;a<n.length&&(l=n[a],[c,d,f]=await s(l,e,t,o),!f);a++);void 0===c&&(0,r.reportError)("orthologsNotFound",null,e,t,o);var p,g=await u(c.genes[0]);return 0===d.length&&(0,r.reportError)("orthologsNotFoundInTarget",null,e,t,o),(p=(p=await Promise.all(d.map(async e=>await Promise.all(e.genes.map(async e=>u(e))))))[0]).unshift(g),p}}])});
//# sourceMappingURL=homology.min.js.map